exporters:
  otlphttp:
    endpoint: http://${LOGS_METADATA_SVC}.${NAMESPACE}.svc.{{ .Values.sumologic.clusterDNSDomain }}.:4319
    sending_queue:
      queue_size: 10
    # this improves load balancing at the cost of more network traffic
    disable_keep_alives: true

extensions:
{{ if .Values.sumologic.logs.collector.otelcloudwatch.persistence.enabled }}
  file_storage:
    compaction:
      directory: /var/lib/storage/otc
      on_rebound: true
    directory: /var/lib/storage/otc
    timeout: 10s
{{ end }}
  health_check: {}
  pprof: {}

processors:
  batch:
    send_batch_max_size: 2000
    send_batch_size: 1000
    timeout: 1s
  transform/set_source_identifier:
    error_mode: ignore
    log_statements:
      - context: log
        statements:
          - set(attributes["cloudwatch.log.stream"], resource.attributes["cloudwatch.log.stream"])
          - set(attributes["cloudwatch.log.group.name"], resource.attributes["cloudwatch.log.group.name"])
  groupbyattrs/stream:
    keys:
      - cloudwatch.log.stream
  transform/parsejson:
    error_mode: ignore
    log_statements:
      - context: log
        statements:
          - set(body, ParseJSON(body)) where IsMatch(body, "^{")
          - merge_maps(attributes, body, "insert") where IsMap(body)
          - set(body, "") where IsMatch(body, "^{")
receivers:
  awscloudwatch:
    region: {{ .Values.sumologic.logs.collector.otelcloudwatch.region }}
    logs:
      poll_interval: {{ .Values.sumologic.logs.collector.otelcloudwatch.pollInterval }}
      max_events_per_request: 10000
      groups:
{{ toYaml .Values.sumologic.logs.collector.otelcloudwatch.logGroups | indent 9 }}

service:
  extensions:
    - health_check
{{ if .Values.sumologic.logs.collector.otelcloudwatch.persistence.enabled }}
    - file_storage
{{ end }}
    - pprof
  pipelines:
    logs/collector/otelcloudwatch:
      receivers:
        - awscloudwatch
      processors:
        - transform/set_source_identifier
        - groupbyattrs/stream
        - transform/parsejson
        - batch
      exporters:
        - otlphttp
  telemetry:
    logs:
      level: {{ .Values.otellogs.logLevel | quote }}
